//Nesting

@import "buttons";
@import "links";

.content {
  border:1px solid red;
  padding:20px;
  h2 {
    font-size:2em;
    margin:20px 0;
  }
  p {
    font-size: 1.2em;
    margin: 15px 0;
  }
  .callout {
    border-color:green;
  }
  &.callout { //The &. combines with the parent selector thus making: content.callout
    border-color:blue;
  }
}

.sidebar {
  width:300px;
  min-height:40px;
  background:#ccc;
  display:block;
  .users & { //The space_& puts the selector infront of the parent thus making .users .sidebar
    width:400px;
  }
}

//Variables
//$name is a variable with the name of name
//$name:'Allan'; !default; is a variable of text set to default. Default values do not overwrite other variables with the same name

$rounded: 5px; //will overwrite the $rounded !default from _buttons

//other variables, booleans:
$light: false;
$shadow: true;
//values
$rounded: 4px;
$line-height:1.5px;
$font-size:3rem;
//colors
$base:purple;
$border:rgba(0,255,0,0.5);
$shadow:#333;
//strings
$header: 'Helvetica Neue';
$callout: Arial;
$message: "Laoding";
//lists
$authors: nick,dan,john;
$margin:40px 0 20px 100px;
//null
$shadow:null;

p {
  $border:#ccc;
  border-top: 1px solid $border;
}
h1 {
  border-top:1px solid $border;
}

//Interpolation: inclusion of a variable in a rule defined by ${}. Is related to concatenation
//Shim: to fill out or bring to a level by inserting a shim or shims.
// #{}

$side: top;

sup {
  position:relative;
  #{$side}: -0.5em; //will add top attribute to sup - [can also be used in the selector]
}

//Mixins are blocks of reusable code (see _buttons)
//Mixins are awesome for vendor prefixes - and animations!!!
//... = variable argument, which will allow you to write css with commas, such as css animations

/*
@mixin main($name) {
  -webkit-box-sizing:$name ;
  -moz-box-sizing:$name ;
  box-sizing:$name ;
  }

  Will pass three attributes into main, allowing $name to be changable
*/

@mixin box-sizing($x: border-box) { //in this case $x's default is border-box
  -webkit-box-sizing:$x ;
  -moz-box-sizing:$x ;
  box-sizing:$x ;
}

.content {
  @include box-sizing;
}

.callout {
  @include box-sizing(content-box);
}


//Interpolation and mixins
//Note to self: variables without a default value must come before those with ie: ($value, $value:x, $value:y)

@mixin highlight($color, $side) { //this mixin defines a color and a side, and by using interpolation, we can define the side. AWESOME!!
  border-#{$side}-color: $color;
}

.content {
  @include highlight(blue,left);
}







































